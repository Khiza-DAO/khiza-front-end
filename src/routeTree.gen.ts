/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StudioImport } from './routes/studio'
import { Route as MethodAndMindsImport } from './routes/method-and-minds'
import { Route as JoinUsImport } from './routes/join-us'
import { Route as InsightLabImport } from './routes/insight-lab'
import { Route as BuildTogetherImport } from './routes/build-together'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as PostsIndexImport } from './routes/posts.index'
import { Route as BlogIndexImport } from './routes/blog.index'
import { Route as PostsSlugImport } from './routes/posts.$slug'
import { Route as BlogSlugImport } from './routes/blog.$slug'

// Create/Update Routes

const StudioRoute = StudioImport.update({
  id: '/studio',
  path: '/studio',
  getParentRoute: () => rootRoute,
} as any)

const MethodAndMindsRoute = MethodAndMindsImport.update({
  id: '/method-and-minds',
  path: '/method-and-minds',
  getParentRoute: () => rootRoute,
} as any)

const JoinUsRoute = JoinUsImport.update({
  id: '/join-us',
  path: '/join-us',
  getParentRoute: () => rootRoute,
} as any)

const InsightLabRoute = InsightLabImport.update({
  id: '/insight-lab',
  path: '/insight-lab',
  getParentRoute: () => rootRoute,
} as any)

const BuildTogetherRoute = BuildTogetherImport.update({
  id: '/build-together',
  path: '/build-together',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const PostsSlugRoute = PostsSlugImport.update({
  id: '/posts/$slug',
  path: '/posts/$slug',
  getParentRoute: () => rootRoute,
} as any)

const BlogSlugRoute = BlogSlugImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/build-together': {
      id: '/build-together'
      path: '/build-together'
      fullPath: '/build-together'
      preLoaderRoute: typeof BuildTogetherImport
      parentRoute: typeof rootRoute
    }
    '/insight-lab': {
      id: '/insight-lab'
      path: '/insight-lab'
      fullPath: '/insight-lab'
      preLoaderRoute: typeof InsightLabImport
      parentRoute: typeof rootRoute
    }
    '/join-us': {
      id: '/join-us'
      path: '/join-us'
      fullPath: '/join-us'
      preLoaderRoute: typeof JoinUsImport
      parentRoute: typeof rootRoute
    }
    '/method-and-minds': {
      id: '/method-and-minds'
      path: '/method-and-minds'
      fullPath: '/method-and-minds'
      preLoaderRoute: typeof MethodAndMindsImport
      parentRoute: typeof rootRoute
    }
    '/studio': {
      id: '/studio'
      path: '/studio'
      fullPath: '/studio'
      preLoaderRoute: typeof StudioImport
      parentRoute: typeof rootRoute
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugImport
      parentRoute: typeof rootRoute
    }
    '/posts/$slug': {
      id: '/posts/$slug'
      path: '/posts/$slug'
      fullPath: '/posts/$slug'
      preLoaderRoute: typeof PostsSlugImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRoute
  '/build-together': typeof BuildTogetherRoute
  '/insight-lab': typeof InsightLabRoute
  '/join-us': typeof JoinUsRoute
  '/method-and-minds': typeof MethodAndMindsRoute
  '/studio': typeof StudioRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/posts/$slug': typeof PostsSlugRoute
  '/blog': typeof BlogIndexRoute
  '/posts': typeof PostsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRoute
  '/build-together': typeof BuildTogetherRoute
  '/insight-lab': typeof InsightLabRoute
  '/join-us': typeof JoinUsRoute
  '/method-and-minds': typeof MethodAndMindsRoute
  '/studio': typeof StudioRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/posts/$slug': typeof PostsSlugRoute
  '/blog': typeof BlogIndexRoute
  '/posts': typeof PostsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRoute
  '/build-together': typeof BuildTogetherRoute
  '/insight-lab': typeof InsightLabRoute
  '/join-us': typeof JoinUsRoute
  '/method-and-minds': typeof MethodAndMindsRoute
  '/studio': typeof StudioRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/posts/$slug': typeof PostsSlugRoute
  '/blog/': typeof BlogIndexRoute
  '/posts/': typeof PostsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/build-together'
    | '/insight-lab'
    | '/join-us'
    | '/method-and-minds'
    | '/studio'
    | '/blog/$slug'
    | '/posts/$slug'
    | '/blog'
    | '/posts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/build-together'
    | '/insight-lab'
    | '/join-us'
    | '/method-and-minds'
    | '/studio'
    | '/blog/$slug'
    | '/posts/$slug'
    | '/blog'
    | '/posts'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/build-together'
    | '/insight-lab'
    | '/join-us'
    | '/method-and-minds'
    | '/studio'
    | '/blog/$slug'
    | '/posts/$slug'
    | '/blog/'
    | '/posts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRoute
  BuildTogetherRoute: typeof BuildTogetherRoute
  InsightLabRoute: typeof InsightLabRoute
  JoinUsRoute: typeof JoinUsRoute
  MethodAndMindsRoute: typeof MethodAndMindsRoute
  StudioRoute: typeof StudioRoute
  BlogSlugRoute: typeof BlogSlugRoute
  PostsSlugRoute: typeof PostsSlugRoute
  BlogIndexRoute: typeof BlogIndexRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRoute,
  BuildTogetherRoute: BuildTogetherRoute,
  InsightLabRoute: InsightLabRoute,
  JoinUsRoute: JoinUsRoute,
  MethodAndMindsRoute: MethodAndMindsRoute,
  StudioRoute: StudioRoute,
  BlogSlugRoute: BlogSlugRoute,
  PostsSlugRoute: PostsSlugRoute,
  BlogIndexRoute: BlogIndexRoute,
  PostsIndexRoute: PostsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/build-together",
        "/insight-lab",
        "/join-us",
        "/method-and-minds",
        "/studio",
        "/blog/$slug",
        "/posts/$slug",
        "/blog/",
        "/posts/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx"
    },
    "/build-together": {
      "filePath": "build-together.tsx"
    },
    "/insight-lab": {
      "filePath": "insight-lab.tsx"
    },
    "/join-us": {
      "filePath": "join-us.tsx"
    },
    "/method-and-minds": {
      "filePath": "method-and-minds.tsx"
    },
    "/studio": {
      "filePath": "studio.tsx"
    },
    "/blog/$slug": {
      "filePath": "blog.$slug.tsx"
    },
    "/posts/$slug": {
      "filePath": "posts.$slug.tsx"
    },
    "/blog/": {
      "filePath": "blog.index.tsx"
    },
    "/posts/": {
      "filePath": "posts.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
